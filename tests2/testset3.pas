program TESTSET3 ( OUTPUT ) ;

(********)
(*$A+   *)
(********)



type CHAR32 = array [ 1 .. 32 ] of CHAR ;
     SYMB = ( SYMB_EOF , SYMB_UNKNOWN , EOLCHAR , SEPARATOR , COMMENT1
            , COMMENT2 , COMMENT3 , COMMENT4 , COMMENT5 , STRINGCONST ,
            HEXSTRINGCONST , BINSTRINGCONST , INTCONST , REALCONST ,
            IDENT , SYLPARENT , SYRPARENT , SYLBRACK , SYRBRACK ,
            SYCOMMA , SYSEMICOLON , SYARROW , SYPERIOD , SYDOTDOT ,
            SYCOLON , SYPLUS , SYMINUS , SYMULT , SYSLASH , SYEQOP ,
            SYNEOP , SYGTOP , SYLTOP , SYGEOP , SYLEOP , SYOROP ,
            SYANDOP , SYASSIGN , SYAND , SYDIV , SYMOD , SYOR , SYXOR ,
            SYIN , SYNOT , SYLABEL , SYCONST , SYTYPE , SYVAR , SYFUNC
            , SYPROG , SYPROC , SYSET , SYPACKED , SYARRAY , SYRECORD ,
            SYFILE , SYFORWARD , SYBEGIN , SYIF , SYCASE , SYREPEAT ,
            SYWHILE , SYFOR , SYWITH , SYGOTO , SYEND , SYELSE ,
            SYUNTIL , SYOF , SYDO , SYTO , SYDOWNTO , SYTHEN , SYFRTRN
            , SYEXTRN , SYOTHERWISE , SYOTHER , SYBREAK , SYCONTINUE ,
            SYRETURN , SYMODULE , SYLOCAL , SYSTATIC , NOTUSED ) ;
     SYMSET = set of SYMB ;


var S : SYMSET ;


const BLOCKBEGSYS : SYMSET =
      [ SYLABEL , SYCONST , SYTYPE , SYVAR , SYSTATIC , SYPROC , SYFUNC
        , SYLOCAL , SYBEGIN ] ;
      STATBEGSYS : SYMSET =
      [ SYBEGIN , SYGOTO , SYIF , SYWHILE , SYREPEAT , SYFOR , SYWITH ,
        SYCASE , SYBREAK , SYCONTINUE , SYRETURN ] ;



procedure DRUCKE_SYMSET ( T : CHAR32 ; S : SYMSET ) ;

   var X : SYMB ;

   begin (* DRUCKE_SYMSET *)
     WRITELN ( OUTPUT , 'symset at ' , T ) ;
     for X := SYMB_EOF to NOTUSED do
       if X in S then
         WRITE ( OUTPUT , X , ' ' ) ;
     WRITELN ( OUTPUT ) ;
     WRITELN ( OUTPUT ) ;
   end (* DRUCKE_SYMSET *) ;



begin (* HAUPTPROGRAMM *)
  S := BLOCKBEGSYS + STATBEGSYS - [ SYCASE ] ;
  DRUCKE_SYMSET ( 'TEST FEHLER' , S ) ;
end (* HAUPTPROGRAMM *) .
